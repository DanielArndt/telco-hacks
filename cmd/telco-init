#!/usr/bin/env python3
import json
from pathlib import Path

import sh
from lib.utils import run_cmd

HOME_DIR = Path.home()
MULTIPASS_INSTANCE_NAME = "telco-integration"


# multipass transfer ~/.tmux.conf telco-integration:/home/ubuntu


class MultipassCtl:
    def __init__(self, instance_name) -> None:
        self.instance_name = instance_name

    def exists(self):
        try:
            sh.multipass.info(self.instance_name)
            return True
        except sh.ErrorReturnCode:
            return False

    def launch(self):
        mp_launch_command = f"""multipass launch \
            --cloud-init {HOME_DIR}/git/canonical/telco/telco-hacks/cloud-init/integration.yaml \
            --memory 8G \
            --cpus 2 \
            --disk 80G \
            --mount {HOME_DIR}/git/canonical/:/home/ubuntu/canonical/ \
            --timeout 1200 \
            --name {self.instance_name} \
            22.04
        """
        run_cmd(mp_launch_command)

    def add_mounts(self):
        if not self.has_mount("/home/ubuntu/canonical"):
            self.mount_canonical()

    def mount_canonical(self):
        run_cmd(
            f"multipass mount {HOME_DIR}/git/canonical {self.instance_name}:/home/ubuntu/canonical"
        )

    def transfer_files(self):
        run_cmd(
            f"multipass transfer {HOME_DIR}/.tmux.conf {self.instance_name}:/home/ubuntu/"
        )

    def has_mount(self, destination):
        info_output = sh.multipass.info(self.instance_name, format="json")
        info = json.loads(info_output)["info"]
        mounts = info[self.instance_name]["mounts"]
        if destination in mounts:
            return True
        else:
            return False


def main():
    multipass_instance = MultipassCtl(MULTIPASS_INSTANCE_NAME)
    if not multipass_instance.exists():
        multipass_instance.launch()
    multipass_instance.add_mounts()


if __name__ == "__main__":
    main()
